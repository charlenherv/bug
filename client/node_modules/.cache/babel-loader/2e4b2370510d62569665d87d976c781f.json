{"remainingRequest":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/babel-loader/lib/index.js!/Users/hervey/Projects/Development/audiomarketplace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hervey/Projects/Development/audiomarketplace/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hervey/Projects/Development/audiomarketplace/src/components/audio/AudioTrimmer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hervey/Projects/Development/audiomarketplace/src/components/audio/AudioTrimmer.vue","mtime":1631384392549},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AudioTrimmer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<!-- \n    Developer notes:\n\n    Test for orientation change while resizing. Reset if possible.\n    Test for change in width while resizing. Reset if possible.\n\n    Testing width change during no interaction and width does not adjust to AudioBox width. Reset on resize.\n    \n    Resize limit makes next drag in other direction inoperable. You have to click again to drag. Troubleshoot.\n\n    When all the way to the right. The start time can be push if you keep draggint past the limit to the right. Calculate start time limit.\n-->\n  <div ref=\"Frame\" class=\"AudioCropper_Frame\">\n    <div ref=\"Crop\" class=\"AudioCropper_Crop\">\n            <div id=\"Crop_Left\" class=\"ui-resizable-handle ui-resizable-w\" @dblclick=\"trimInput('start')\">\n                <div class=\"TimeMarker TimeStart\" ref=\"TimeMarker_Start\" :data-side=\"markerWidth.start < dragSpace.left ? 'left':'right'\"><span>{{displayTimeStart}}</span></div>\n            </div>\n            <div id=\"Crop_Right\" class=\"ui-resizable-handle ui-resizable-e\" @dblclick=\"trimInput('end')\">\n                <div class=\"TimeMarker TimeEnd\" ref=\"TimeMarker_End\" :data-side=\"markerWidth.end < dragSpace.right ? 'right':'left'\"><span>{{displayTimeEnd}}</span></div> \n            </div> \n            <div class=\"Crop_Duration\" @dblclick=\"trimInput('duration')\">{{displayComputed}}s</div>  \n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport $ from \"jquery\";\nimport \"jquery-ui/ui/widgets/resizable\";\nimport \"jquery-ui/ui/widgets/draggable\";\nimport { AudioFunctions } from '../../mixins/AudioFunctions.js';\n\nvar limitDuration = 10;\nlet endPreviewOffset = 3;\n\nexport default {\n    name: \"AudioCropper\",\n    props: ['appData','item'],\n    mixins: [AudioFunctions],\n    data() {\n        return {\n            // Data\n            totalDuration: this.item.duration,\n            cropDuration: this.item.editable.preview.duration,\n            cropStart: this.item.editable.preview.start,\n            \n            // Display \n            dragSpace: {\n                left: 0,\n                right: 0\n            },\n            markerWidth: {\n                start: 50,\n                end: 50\n            }\n        }\n    },\n    computed:{\n        displayComputed: function() {\n            return this.trimNumber(this.cropDuration,2);\n        },\n        displayTimeStart: function() {\n            return this.trimNumber(this.cropStart,2);\n        },\n        displayTimeEnd: function() {\n            return this.trimNumber((this.cropStart + this.cropDuration),2);\n        }\n    },\n    methods: {\n        trimNumber: function(num,decimals) {\n            let number = num;\n            var s = num.toString();\n            var d = s.split(\".\");\n            if (d.length > 1) {\n                d[1] = d[1].substring(0, decimals);\n                number = parseFloat(d.join(\".\"));\n            }\n            return number;\n        },        \n        setCropperSize: function(time){\n            const CropperData = this;\n            const frameWidth = CropperData.$refs.Frame.offsetWidth;\n            var pixelScale = (frameWidth/CropperData.totalDuration);\n            var cropLeft = pixelScale * time.start;\n            var cropWidth = pixelScale * time.duration;\n            \n            CropperData.$refs.Crop.style.width = cropWidth + 'px';\n            CropperData.$refs.Crop.style.left = cropLeft + 'px'\n            CropperData.setMarkerWidth();\n        },\n        setMarkerWidth: function(){\n            const CropperData = this;\n            CropperData.markerWidth = {\n                start: CropperData.$refs.TimeMarker_Start.offsetWidth,\n                end: CropperData.$refs.TimeMarker_End.offsetWidth\n            }\n            CropperData.dragSpace = {\n                left: CropperData.$refs.Crop.getBoundingClientRect().left - CropperData.$refs.Frame.getBoundingClientRect().left,\n                right: CropperData.$refs.Frame.getBoundingClientRect().right- CropperData.$refs.Crop.getBoundingClientRect().right\n            }\n        },\n        trimInput: function(property) {\n            const CropperData = this;\n            \n            // Remove previous SuperInput instance\n            Vue.set(CropperData.appData.tools.superInput,'state', false);\n\n            // Get previous time\n            let prevTime = {\n                'duration': CropperData.cropDuration,\n                'start': CropperData.cropStart\n            }\n            \n            // Reset SuperInput\n            this.$nextTick(function () {\n                Vue.set(CropperData.appData.tools.superInput,'items', []);\n\n                // Default value for SuperInput\n                let defaultValue = property === 'start' ? prevTime.start: \n                property === 'duration' ? prevTime.duration: \n                property === 'end' ? prevTime.start + prevTime.duration: \n                0;\n\n                // Add new SuperInput data\n                CropperData.appData.tools.superInput.items = [\n                    {\n                        type: 'singleLine',\n                        defaultValue: this.trimNumber(defaultValue,2),\n                        callback: function(input,callback) {\n                            let value = parseFloat(input);\n                            let timeData = {\n                                'duration': CropperData.cropDuration,\n                                'start': CropperData.cropStart\n                            };\n                            let processTrim = false;\n                            if (property === 'start') {\n                                if (value >= 0 && value <= (CropperData.totalDuration - limitDuration)) {\n                                    timeData.start = value\n                                    if ( (timeData.start + timeData.duration) < limitDuration) {\n                                        timeData.duration = limitDuration;                                    \n                                    }\n                                    if (timeData.start + timeData.duration > CropperData.totalDuration) {\n                                        timeData.duration = CropperData.totalDuration - timeData.start;\n                                    }\n                                    processTrim = true\n                                }\n                            }\n                            else if (property === 'end' || property === 'duration') {\n                                if (value >= limitDuration && value <= CropperData.totalDuration) {\n                                    if (property === 'end') {\n                                        if (value >= timeData.start + limitDuration) {\n                                            timeData.duration =  value - timeData.start;\n                                            processTrim = true;\n                                        } \n                                    }\n                                    if (property === 'duration') {\n                                        if (value <= CropperData.totalDuration - timeData.start) {\n                                            timeData.duration = value;\n                                            processTrim = true;\n                                        }\n                                    }\n                                    if ( (timeData.start + timeData.duration) < limitDuration) {\n                                        timeData.duration = limitDuration;\n                                    }\n                                    if (timeData.start + timeData.duration > CropperData.totalDuration) {\n                                        timeData.duration = CropperData.totalDuration - timeData.start;\n                                    }\n                                }\n                            }\n\n                            if (processTrim === true) {\n                                CropperData.cropStart = timeData.start;\n                                CropperData.cropDuration = timeData.duration;\n                        \n                                if (timeData.start !== prevTime.start || timeData.duration !== prevTime.duration) {\n                                    CropperData.setCropperSize(timeData);\n                                    CropperData.setMarkerWidth();\n                                    CropperData.$emit('cropData', timeData);\n                                    var options = {\n                                        playMode: 'trim',\n                                        timeData: timeData\n                                    };\n                                    if (property === 'end') {\n                                        options.seek = timeData.duration - endPreviewOffset;\n                                        options.cropSide = 'end';\n                                    }\n                                    CropperData.playSound(CropperData.appData, CropperData.item, options);\n                                }\n                                \n                                callback();\n                            }\n                        }\n                    }\n                ]\n                Vue.set(CropperData.appData.tools.superInput,'state', true);\n            });\n        }\n    },\n    mounted() {\n        const CropperData = this;\n        var getTime = function(CropperData,cropLeft,cropSize,frameSize) {\n            var start = (cropLeft/frameSize) * CropperData.totalDuration;\n            var duration = CropperData.totalDuration * (cropSize/frameSize);\n\n            var latestStart = CropperData.totalDuration - limitDuration;\n            if (start > latestStart) {\n                start = latestStart;\n            }\n            if (duration < limitDuration) {\n                duration = limitDuration;\n            }\n            \n            return {\n                'start': parseFloat(start),\n                'duration': parseFloat(duration)\n            }\n        };\n        \n        // Interactions\n        var prevTime = {\n            'duration': CropperData.cropDuration,\n            'start': CropperData.cropStart\n        }\n        $(this.$refs.Crop)\n        .draggable({\n            axis: \"x\",\n            containment: \"parent\",\n            cancel: \".ui-resizable-handle\",\n            start: function(){\n                prevTime = {\n                    'duration': CropperData.cropDuration,\n                    'start': CropperData.cropStart\n                }\n            },\n            drag: function(event, ui) {\n                var time = getTime(CropperData,ui.position.left,$(ui.helper).width(),$(ui.helper).parent().width());\n                CropperData.cropDuration = time.duration;\n                CropperData.cropStart = time.start;\n                CropperData.setMarkerWidth();\n            },\n            stop: function() {\n                // Send to audio player\n                var timeData = {\n                    'duration': CropperData.cropDuration,\n                    'start': CropperData.cropStart\n                };\n                \n                if (timeData.start !== prevTime.start || timeData.duration !== prevTime.duration) {                    \n                    CropperData.setMarkerWidth();\n                    CropperData.$emit('cropData', timeData);\n                    var options = {\n                        playMode: 'trim',\n                        timeData: timeData\n                    };\n                    CropperData.playSound(CropperData.appData, CropperData.item, options);\n                }\n            }\n        })\n        .resizable({ \n            containment: \"parent\",\n            handles: { \n                'w': '#Crop_Left',\n                'e': '#Crop_Right' \n            },\n            start: function(event, ui) {\n                prevTime = {\n                    'duration': CropperData.cropDuration,\n                    'start': CropperData.cropStart\n                }\n                var frameSize = $(ui.element).parent().width();\n                var limitWidth = frameSize/CropperData.totalDuration * limitDuration;\n                $(ui.element).resizable( \"option\", \"minWidth\", limitWidth);\n            },\n            resize: function(event, ui) {\n                var frameSize = $(ui.element).parent().width(),\n                cropSize = ui.size.width,\n                leftPosition = ui.position.left;\n                var time = getTime(CropperData,leftPosition,cropSize,frameSize);\n                CropperData.cropDuration = time.duration;\n                CropperData.cropStart = time.start;\n                CropperData.setMarkerWidth();\n            },\n            stop: function(event, ui) {\n                // Send to audio player\n                var property = $(ui.element).data('ui-resizable').axis === 'w' ? 'start': 'end'; \n                var timeData = {\n                    'duration': CropperData.cropDuration,\n                    'start': CropperData.cropStart\n                };\n\n                if (timeData.start !== prevTime.start || timeData.duration !== prevTime.duration) {\n                    CropperData.setMarkerWidth();\n                    CropperData.$emit('cropData', timeData);\n                    var options = {\n                        playMode: 'trim',\n                        timeData: timeData\n                    };\n                    if (property === 'end') {\n                        options.seek = timeData.duration - endPreviewOffset;\n                        options.cropSide = 'end';\n                    }\n                    CropperData.playSound(CropperData.appData, CropperData.item, options);\n                }\n            }\n        });\n\n        // Initialize\n        CropperData.cropDuration = CropperData.item.editable.preview.duration;\n        CropperData.cropStart = CropperData.item.editable.preview.start;\n        CropperData.setMarkerWidth();\n    },\n    beforeDestroy() {\n        $(this.$refs.$Crop).draggable(\"destroy\").resizable(\"destroy\");\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.AudioCropper_Frame {\n    position: relative;\n    height: 40px;\n    width: 100%;\n    border-radius: 10px;\n    background: lightgray;\n    transition: all 1s;\n    .AudioCropper_Crop {\n        cursor: pointer;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        background: rgb(48, 131, 255);\n    }\n}\n.ui-resizable-handle {\n    z-index: 2;\n    position: absolute;\n    top:0;\n    height: 100%;\n    width:12.5px;\n    &#Crop_Left {\n        left: 0;\n        &:before {\n            transform-origin: center left;\n        }\n    }\n    &#Crop_Right {\n        right:0;\n        &:before {\n            transform-origin: center right;\n        }\n    }\n    .TimeMarker {\n        display: none;\n        position: absolute;\n        box-sizing: border-box;\n        line-height: 17.5px;\n        height: 17.5px;\n        padding: 0 5px;\n        font-size: 65%;\n        font-weight: bold;\n        color: white;\n        background: rgb(26, 74, 145);\n        &.TimeStart {\n            top: 0;\n            left: 0;\n            transform: translate(0, 0);\n            &[data-side=\"left\"] {\n                left: auto;\n                transform: translate(-100%, 0);\n            }\n        }\n        &.TimeEnd {\n            bottom: 0;\n            right:0;\n            transform: translate(0, 0);\n            &[data-side=\"right\"] {\n                transform: translate(100%, 0);\n            }\n        }\n    }\n    &:before {\n        content: '';\n        position: absolute;\n        top:0;\n        height: 100%;\n        width:100%;\n        background: rgb(26, 74, 145);\n        transition: all 0.75s;\n    }\n    &:after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%,-50%);\n        height: 75%;\n        width:2px;\n        background: rgba(255,255,255,0.1);\n        border-radius: 2px;\n    }\n    &:active {\n    cursor: none;\n        .TimeMarker {\n            display: block;\n        }\n        &:before {\n            transition: all 0.1s;\n        }\n        &:after {\n            display: none;\n        }\n    }\n}\n\n.AudioCropper_Crop.ui-draggable-dragging .ui-resizable-handle,\n.ui-resizable-handle:active,\n.ui-resizable-handle:hover {\n    cursor: none;\n    .TimeMarker {\n        display: block;\n    }\n    &:before {\n        transition: all 0.1s;\n        transform: scaleX(.25);\n    }\n    &:after {\n        display: none;\n    }\n}\n\n.Crop_Duration {\n    z-index: 1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    font-size: .7rem;\n    font-weight: 600;\n    color: white;\n}\n\n\n</style>\n"],"sourceRoot":"src/components/audio"}]}