{"remainingRequest":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/babel-loader/lib/index.js!/Users/hervey/Projects/Development/audiomarketplace/node_modules/eslint-loader/index.js??ref--13-0!/Users/hervey/Projects/Development/audiomarketplace/src/store.js","dependencies":[{"path":"/Users/hervey/Projects/Development/audiomarketplace/src/store.js","mtime":1633441454906},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/hervey/Projects/Development/audiomarketplace/src/store.js"],"names":["Vue","Vuex","axios","router","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","use","config","devtools","Store","state","currentUser","playlists","mutations","setCurrentUser","object","updateLikes","likes","updatePlaylistItem","newObject","playlistObj","filter","obj","_id","playlistIndex","indexOf","console","log","actions","loginCreateOrUpdate","userData","createUser","auth","email","password","then","userCredential","dispatch","user","uid","status","catch","authId","post","params","response","data","updateUser","userId","profile","fetchCurrentUser","get","processAndSetUser","promise","commit","mode","callback","processPromises","push","Promise","resolve","reject","finalUserObject","all","values","updateLike","options","currentLikes","likeOrUnlike","soundId","v","i","a","playlistId","playlistData","createPlaylist","playlistTitle"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from \"axios\";\nimport router from './components/pages/router.js'\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\n\nVue.use(Vuex)\nVue.config.devtools = true\n\nexport default new Vuex.Store({\n  state: {\n    currentUser: {\n      playlists: []\n    }\n  },\n  mutations: {\n    setCurrentUser(state, object) {\n      state.currentUser = object\n    },\n    updateLikes(state, object) {\n      state.currentUser.likes = object\n    },\n    updatePlaylistItem(state, newObject) {\n      var playlistObj = state.currentUser.playlists.filter(obj => obj._id === newObject._id)[0];\n      const playlistIndex = state.currentUser.playlists.indexOf(playlistObj);\n      state.currentUser.playlists[playlistIndex] = newObject;\n      console.log(state.currentUser.playlists[playlistIndex]);\n    }\n  },\n  actions: {\n\n      // Login and sign up\n      async loginCreateOrUpdate({ dispatch, state }, userData) {\n        const auth = getAuth();\n\n        // Update\n        if (state.currentUser.status === 'inactive') {\n          dispatch('updateUser', userData);\n        } else {\n\n          // Sign In\n          await signInWithEmailAndPassword(auth, userData.email, userData.password)\n          .then((userCredential) => {\n              dispatch('fetchCurrentUser', userCredential.user.uid)\n          })\n          .catch(() => {\n              // Check for error\n              createUser();\n          });\n        }\n\n        // Create\n        async function createUser() {\n          // Check if because exists already, then\n          await createUserWithEmailAndPassword(auth, userData.email, userData.password)\n          .then((userCredential) => {\n                dispatch('createUser', userCredential.user.uid)\n          })\n        }\n      },\n      async createUser({ dispatch }, authId) {\n        axios\n          .post('/createUser', {}, { params: { authId: authId } })\n          .then(response => {\n            dispatch('processAndSetUser', response.data.userData)\n          });\n      },\n\n      // User handling\n      async updateUser({ dispatch, state }, userData) {\n        axios\n          .post('/updateUser', {}, { params: \n            { \n              userId: state.currentUser._id,\n              profile: userData.profile\n            } \n          })\n          .then(response => {\n            dispatch('processAndSetUser', response.data.userData);            \n          });\n      },\n      async fetchCurrentUser({ dispatch }, authId) {\n        axios\n          .get('/getUser', { params: { authId: authId } })\n          .then(response => {\n            dispatch('processAndSetUser', response.data.userData)\n          });\n      },\n      async processAndSetUser({ commit, dispatch, state}, data) {\n        const mode = data === 'refresh' ? 'refresh': 'default';\n        if (mode === 'refresh') {\n          axios\n          .get('/getUser', { params: { userId: state.currentUser._id } })\n          .then(response => {\n              dispatch('processAndSetUser', response.data.userData);\n          });\n        } else {\n          let processPromises = [];\n          function promise(callback) {\n            processPromises.push(\n                new Promise(function(resolve, reject){\n                    callback(resolve, reject);\n                })\n            );    \n          };\n          let finalUserObject = data;\n          let playlists = finalUserObject.playlists;\n          // Playlists\n          if (playlists) {\n            promise(function(resolve,reject){\n              axios.get('/getPlaylists', { params: { playlists: playlists } }).then(response => {\n                const playlists = response.data.playlists || [];\n                finalUserObject.playlists = playlists;\n                resolve();\n              });\n            });           \n          }        \n          Promise.all(processPromises).then(values => {\n            commit('setCurrentUser', finalUserObject);\n          });\n        }     \n      },\n      \n      // Profile Content\n      async updateLike({commit, state}, options) {\n        var currentLikes = state.currentUser.likes || [];\n        if (options.likeOrUnlike === 'like') { // Add like\n          currentLikes.push(options.soundId);\n        } else { // Remove like\n          currentLikes = currentLikes.filter(function(v, i, a){ \n            return v !== options.soundId;\n          });\n        }\n        commit('updateLikes', currentLikes) // Update in state\n        \n        // Update in database\n        axios.post('/updateLike', {}, { params: { \n          userId: state.currentUser._id,\n          soundId: options.soundId,\n          likeOrUnlike: options.likeOrUnlike \n        }});\n      },\n      async updatePlaylistItem({commit, state}, options) {\n        axios.post('/updatePlaylistItem', {}, { params: { \n          userId: state.currentUser._id,\n          soundId: options.soundId,\n          playlistId: options.playlistId \n        }})\n        .then(response => {\n          commit('updatePlaylistItem', response.data.playlistData)\n        });;\n      },\n      async createPlaylist({dispatch, state}, options) {\n        axios.post('/createPlaylist', {}, { params: { \n          userId: state.currentUser._id,\n          soundId: options.soundId,\n          playlistTitle: options.playlistTitle \n        }})\n        .then(response => {\n          dispatch('processAndSetUser', 'refresh');\n          if (options.callback) {\n            options.callback();\n          }\n        });;\n      }\n  }\n})"]}]}