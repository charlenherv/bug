{"remainingRequest":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/babel-loader/lib/index.js!/Users/hervey/Projects/Development/audiomarketplace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hervey/Projects/Development/audiomarketplace/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hervey/Projects/Development/audiomarketplace/src/components/general/UploadBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hervey/Projects/Development/audiomarketplace/src/components/general/UploadBox.vue","mtime":1631801302022},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UploadBox.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"{\n    'UploadBox':true\n    }\">\n    <div class=\"UploadBox_Container\">\n\n      <form @submit.prevent=\"sendFile\" enctype=\"multipart/form-data\">\n        <div class=\"UploadBox_Header\">Upload</div>\n        \n        <!-- File drop area -->\n        <div ref=\"DropArea\" class=\"UploadBox_DropArea\">\n          <label for=\"UploadBox_FileSelect\" class=\"UploadBox_DropArea_Button\" data-button=\"\" data-button-color=\"blue\">Select or drag files here</label>\n          <input id=\"UploadBox_FileSelect\" class=\"Style_HidePermanent\" type=\"file\" ref=\"files\" multiple @change=\"onSelect\"/>\n          <div class=\"UploadBox_Message\">{{message}}</div>\n        </div>\n      </form>\n\n      <!-- Uploaded items -->\n      <AudioBox v-for=\"(item,index) in uploadedFiles\" :key=\"index\" :item=\"item\" :mode=\"'edit'\" :appData=\"appData\" @deleteSound=\"deleteSound\"/>\n \n      <!-- Form controls -->\n      <div class=\"UploadBox_Controls\" v-if=\"uploadedFiles.length > 0\">\n          <button id=\"UploadBox_Clear\" data-button=\"\">Clear</button>\n          <button id=\"UploadBox_Save\" data-button=\"\" data-button-color=\"blue\" @click=\"postSounds()\">Save</button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport AudioBox from \"../audio/AudioBox.vue\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default {\n  name: \"UploadBox\",\n  props: ['appData'],\n  components: {\n    AudioBox\n  },\n  data() {\n    return {\n      status: 'initial',\n      message: \"\",\n      filesToUpload: [],\n      uploadedFiles: []\n    }\n  },\n  methods: {\n    validate(file) {\n      const MAX_SIZE = 1000000;\n      const allowedTypes = ['audio/mpeg','audio/mp4','audio/ogg','audio/vnd.wav','audio/vorbis'];\n      \n      if (file.size < MAX_SIZE) {\n        return `This file is too large. Max size is ${MAX_SIZE/1000}Kb`;\n      }\n\n      if (!allowedTypes.includes(file.type)) {\n        return \"This file is not an audio file\";\n      }\n      \n      return \"\";\n    },\n    async sendFiles() {\n      const formData = new FormData();\n      formData.append('userId', this.$store.state.currentUser._id);\n      _.forEach(this.filesToUpload, (file) => {\n        if (this.validate(file) === \"\") {\n          formData.append('files', file.actual);\n        } else {\n          file.status = 'Not sent';\n        }\n      });\n      if (this.filesToUpload.length > 0) {\n        axios.post('/uploadAudio', formData)\n        .then(response => {\n          // Process files\n          const uploadedFiles = response.data.uploadedFiles;\n          _.forEach(uploadedFiles, (file) => {\n\n            // Defaults\n            file.editable = {\n              title: file.originalname,\n              author: 'Username', // Add username automatically, entered name if guest\n              description: 'Enter a description here.',\n              tags: [],\n              marketplace: {\n                mode: 'none'\n              },\n              effects: ['bass'],\n              preview: {\n                \"start\": 0,\n                \"duration\": file.duration\n              }\n            };\n          });\n          \n          // Set uploaded files\n          this.uploadedFiles = [...this.uploadedFiles,...uploadedFiles];\n\n          // Reset file selector\n          this.files = [];\n          this.filesToUpload = [];\n        })\n        .catch(err => {\n          console.log(err);\n        });\n      } else {\n        console.log('Display: No valid audio files were selected');\n      }\n    },\n    onSelect() {\n      const files = this.$refs.files.files;\n      this.filesToUpload = [\n        ...this.filesToUpload,\n        ..._.map(files, file => ({\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          actual: file,\n          invalidMessage: this.validate(file)\n        }))\n      ]\n      this.sendFiles(this.filesToUpload);\n    },\n    async postSounds(){\n      const formData = new FormData();\n      _.forEach(this.uploadedFiles, (item) => {\n          formData.append('soundsToUpdate[]', JSON.stringify(item));\n      });\n      axios.post('/updateSound', formData)\n        .then(response => {\n          console.log(response);\n          this.uploadedFiles = [];\n        })\n        .catch(err => {\n          console.log(err);\n        });      \n    },\n    deleteSound(_id) {\n      const sound = this.uploadedFiles.filter(file => {\n        return file._id = _id\n      })[0];\n      const index = this.uploadedFiles.indexOf(sound);\n      if (index > -1) {\n        this.uploadedFiles.splice(index,  1);\n      }\n    }\n  },\n  mounted() {\n\n    /* DROP AREA - Accept files\n    /*\n      Listen to all of the drag events and bind an event listener to each\n      for the fileform.\n    */\n    ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'].forEach( function( evt ) {\n      /*\n        For each event add an event listener that prevents the default action\n        (opening the file in the browser) and stop the propagation of the event (so\n        no other elements open the file in the browser)\n      */\n      this.$refs.DropArea.addEventListener(evt, function(e){\n        e.preventDefault();\n        e.stopPropagation();\n      }.bind(this), false);\n    }.bind(this));\n\n    /*\n      Add an event listener for drop to the form\n    */\n    this.$refs.DropArea.addEventListener('drop', function(e){\n      /*\n        Capture the files from the drop event and add them to our local files\n        array.\n      */ \n\n      this.filesToUpload = [\n        ...this.filesToUpload,\n        ..._.map(e.dataTransfer.files, file => ({\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          actual: file,\n          invalidMessage: this.validate(file)\n        }))\n      ]\n      this.sendFiles(this.filesToUpload);\n\n    }.bind(this));\n    \n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n  .UploadBox_Header {\n    margin-bottom: 10px;\n    font-size: 20px;\n    font-weight: 600;\n    text-transform: uppercase;\n    text-align: left;\n  }\n  .UploadBox,\n  .UploadBox_Container {\n    box-sizing: border-box;\n    overflow: hidden;\n    padding: 10px;\n    border-radius: 10px;\n  }\n  .UploadBox {\n    margin-bottom: 20px; \n    margin: 0 auto;\n    margin-bottom: 20px;\n    background: #e2ebf0;\n  }\n  .UploadBox_DropArea {\n    position: relative;\n    height: 150px;\n    width:100%;\n    background: transparent;\n    border-radius: 10px;\n    margin-bottom: 10px;\n    background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' opacity='0.2' height='100%25' fill='none' stroke='%23333' stroke-width='2' stroke-dasharray='25%2c 14' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e\");\n  }\n  .UploadBox_DropArea_Button {\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    display: inline-block;\n  }\n  .AudioBox {\n    margin-bottom: 20px;\n  }\n</style>"],"sourceRoot":"src/components/general"}]}