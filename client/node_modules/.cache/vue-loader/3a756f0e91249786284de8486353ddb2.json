{"remainingRequest":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hervey/Projects/Development/audiomarketplace/src/components/general/UploadBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hervey/Projects/Development/audiomarketplace/src/components/general/UploadBox.vue","mtime":1631801302022},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hervey/Projects/Development/audiomarketplace/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBdWRpb0JveCBmcm9tICIuLi9hdWRpby9BdWRpb0JveC52dWUiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgXyBmcm9tICJsb2Rhc2giOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJVcGxvYWRCb3giLAogIHByb3BzOiBbJ2FwcERhdGEnXSwKICBjb21wb25lbnRzOiB7CiAgICBBdWRpb0JveAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0YXR1czogJ2luaXRpYWwnLAogICAgICBtZXNzYWdlOiAiIiwKICAgICAgZmlsZXNUb1VwbG9hZDogW10sCiAgICAgIHVwbG9hZGVkRmlsZXM6IFtdCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB2YWxpZGF0ZShmaWxlKSB7CiAgICAgIGNvbnN0IE1BWF9TSVpFID0gMTAwMDAwMDsKICAgICAgY29uc3QgYWxsb3dlZFR5cGVzID0gWydhdWRpby9tcGVnJywnYXVkaW8vbXA0JywnYXVkaW8vb2dnJywnYXVkaW8vdm5kLndhdicsJ2F1ZGlvL3ZvcmJpcyddOwogICAgICAKICAgICAgaWYgKGZpbGUuc2l6ZSA8IE1BWF9TSVpFKSB7CiAgICAgICAgcmV0dXJuIGBUaGlzIGZpbGUgaXMgdG9vIGxhcmdlLiBNYXggc2l6ZSBpcyAke01BWF9TSVpFLzEwMDB9S2JgOwogICAgICB9CgogICAgICBpZiAoIWFsbG93ZWRUeXBlcy5pbmNsdWRlcyhmaWxlLnR5cGUpKSB7CiAgICAgICAgcmV0dXJuICJUaGlzIGZpbGUgaXMgbm90IGFuIGF1ZGlvIGZpbGUiOwogICAgICB9CiAgICAgIAogICAgICByZXR1cm4gIiI7CiAgICB9LAogICAgYXN5bmMgc2VuZEZpbGVzKCkgewogICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ3VzZXJJZCcsIHRoaXMuJHN0b3JlLnN0YXRlLmN1cnJlbnRVc2VyLl9pZCk7CiAgICAgIF8uZm9yRWFjaCh0aGlzLmZpbGVzVG9VcGxvYWQsIChmaWxlKSA9PiB7CiAgICAgICAgaWYgKHRoaXMudmFsaWRhdGUoZmlsZSkgPT09ICIiKSB7CiAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGVzJywgZmlsZS5hY3R1YWwpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBmaWxlLnN0YXR1cyA9ICdOb3Qgc2VudCc7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgaWYgKHRoaXMuZmlsZXNUb1VwbG9hZC5sZW5ndGggPiAwKSB7CiAgICAgICAgYXhpb3MucG9zdCgnL3VwbG9hZEF1ZGlvJywgZm9ybURhdGEpCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgLy8gUHJvY2VzcyBmaWxlcwogICAgICAgICAgY29uc3QgdXBsb2FkZWRGaWxlcyA9IHJlc3BvbnNlLmRhdGEudXBsb2FkZWRGaWxlczsKICAgICAgICAgIF8uZm9yRWFjaCh1cGxvYWRlZEZpbGVzLCAoZmlsZSkgPT4gewoKICAgICAgICAgICAgLy8gRGVmYXVsdHMKICAgICAgICAgICAgZmlsZS5lZGl0YWJsZSA9IHsKICAgICAgICAgICAgICB0aXRsZTogZmlsZS5vcmlnaW5hbG5hbWUsCiAgICAgICAgICAgICAgYXV0aG9yOiAnVXNlcm5hbWUnLCAvLyBBZGQgdXNlcm5hbWUgYXV0b21hdGljYWxseSwgZW50ZXJlZCBuYW1lIGlmIGd1ZXN0CiAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdFbnRlciBhIGRlc2NyaXB0aW9uIGhlcmUuJywKICAgICAgICAgICAgICB0YWdzOiBbXSwKICAgICAgICAgICAgICBtYXJrZXRwbGFjZTogewogICAgICAgICAgICAgICAgbW9kZTogJ25vbmUnCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBlZmZlY3RzOiBbJ2Jhc3MnXSwKICAgICAgICAgICAgICBwcmV2aWV3OiB7CiAgICAgICAgICAgICAgICAic3RhcnQiOiAwLAogICAgICAgICAgICAgICAgImR1cmF0aW9uIjogZmlsZS5kdXJhdGlvbgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICAgIH0pOwogICAgICAgICAgCiAgICAgICAgICAvLyBTZXQgdXBsb2FkZWQgZmlsZXMKICAgICAgICAgIHRoaXMudXBsb2FkZWRGaWxlcyA9IFsuLi50aGlzLnVwbG9hZGVkRmlsZXMsLi4udXBsb2FkZWRGaWxlc107CgogICAgICAgICAgLy8gUmVzZXQgZmlsZSBzZWxlY3RvcgogICAgICAgICAgdGhpcy5maWxlcyA9IFtdOwogICAgICAgICAgdGhpcy5maWxlc1RvVXBsb2FkID0gW107CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZXJyID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc29sZS5sb2coJ0Rpc3BsYXk6IE5vIHZhbGlkIGF1ZGlvIGZpbGVzIHdlcmUgc2VsZWN0ZWQnKTsKICAgICAgfQogICAgfSwKICAgIG9uU2VsZWN0KCkgewogICAgICBjb25zdCBmaWxlcyA9IHRoaXMuJHJlZnMuZmlsZXMuZmlsZXM7CiAgICAgIHRoaXMuZmlsZXNUb1VwbG9hZCA9IFsKICAgICAgICAuLi50aGlzLmZpbGVzVG9VcGxvYWQsCiAgICAgICAgLi4uXy5tYXAoZmlsZXMsIGZpbGUgPT4gKHsKICAgICAgICAgIG5hbWU6IGZpbGUubmFtZSwKICAgICAgICAgIHNpemU6IGZpbGUuc2l6ZSwKICAgICAgICAgIHR5cGU6IGZpbGUudHlwZSwKICAgICAgICAgIGFjdHVhbDogZmlsZSwKICAgICAgICAgIGludmFsaWRNZXNzYWdlOiB0aGlzLnZhbGlkYXRlKGZpbGUpCiAgICAgICAgfSkpCiAgICAgIF0KICAgICAgdGhpcy5zZW5kRmlsZXModGhpcy5maWxlc1RvVXBsb2FkKTsKICAgIH0sCiAgICBhc3luYyBwb3N0U291bmRzKCl7CiAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIF8uZm9yRWFjaCh0aGlzLnVwbG9hZGVkRmlsZXMsIChpdGVtKSA9PiB7CiAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ3NvdW5kc1RvVXBkYXRlW10nLCBKU09OLnN0cmluZ2lmeShpdGVtKSk7CiAgICAgIH0pOwogICAgICBheGlvcy5wb3N0KCcvdXBkYXRlU291bmQnLCBmb3JtRGF0YSkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgICB0aGlzLnVwbG9hZGVkRmlsZXMgPSBbXTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaChlcnIgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICB9KTsgICAgICAKICAgIH0sCiAgICBkZWxldGVTb3VuZChfaWQpIHsKICAgICAgY29uc3Qgc291bmQgPSB0aGlzLnVwbG9hZGVkRmlsZXMuZmlsdGVyKGZpbGUgPT4gewogICAgICAgIHJldHVybiBmaWxlLl9pZCA9IF9pZAogICAgICB9KVswXTsKICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnVwbG9hZGVkRmlsZXMuaW5kZXhPZihzb3VuZCk7CiAgICAgIGlmIChpbmRleCA+IC0xKSB7CiAgICAgICAgdGhpcy51cGxvYWRlZEZpbGVzLnNwbGljZShpbmRleCwgIDEpOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewoKICAgIC8qIERST1AgQVJFQSAtIEFjY2VwdCBmaWxlcwogICAgLyoKICAgICAgTGlzdGVuIHRvIGFsbCBvZiB0aGUgZHJhZyBldmVudHMgYW5kIGJpbmQgYW4gZXZlbnQgbGlzdGVuZXIgdG8gZWFjaAogICAgICBmb3IgdGhlIGZpbGVmb3JtLgogICAgKi8KICAgIFsnZHJhZycsICdkcmFnc3RhcnQnLCAnZHJhZ2VuZCcsICdkcmFnb3ZlcicsICdkcmFnZW50ZXInLCAnZHJhZ2xlYXZlJywgJ2Ryb3AnXS5mb3JFYWNoKCBmdW5jdGlvbiggZXZ0ICkgewogICAgICAvKgogICAgICAgIEZvciBlYWNoIGV2ZW50IGFkZCBhbiBldmVudCBsaXN0ZW5lciB0aGF0IHByZXZlbnRzIHRoZSBkZWZhdWx0IGFjdGlvbgogICAgICAgIChvcGVuaW5nIHRoZSBmaWxlIGluIHRoZSBicm93c2VyKSBhbmQgc3RvcCB0aGUgcHJvcGFnYXRpb24gb2YgdGhlIGV2ZW50IChzbwogICAgICAgIG5vIG90aGVyIGVsZW1lbnRzIG9wZW4gdGhlIGZpbGUgaW4gdGhlIGJyb3dzZXIpCiAgICAgICovCiAgICAgIHRoaXMuJHJlZnMuRHJvcEFyZWEuYWRkRXZlbnRMaXN0ZW5lcihldnQsIGZ1bmN0aW9uKGUpewogICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICB9LmJpbmQodGhpcyksIGZhbHNlKTsKICAgIH0uYmluZCh0aGlzKSk7CgogICAgLyoKICAgICAgQWRkIGFuIGV2ZW50IGxpc3RlbmVyIGZvciBkcm9wIHRvIHRoZSBmb3JtCiAgICAqLwogICAgdGhpcy4kcmVmcy5Ecm9wQXJlYS5hZGRFdmVudExpc3RlbmVyKCdkcm9wJywgZnVuY3Rpb24oZSl7CiAgICAgIC8qCiAgICAgICAgQ2FwdHVyZSB0aGUgZmlsZXMgZnJvbSB0aGUgZHJvcCBldmVudCBhbmQgYWRkIHRoZW0gdG8gb3VyIGxvY2FsIGZpbGVzCiAgICAgICAgYXJyYXkuCiAgICAgICovIAoKICAgICAgdGhpcy5maWxlc1RvVXBsb2FkID0gWwogICAgICAgIC4uLnRoaXMuZmlsZXNUb1VwbG9hZCwKICAgICAgICAuLi5fLm1hcChlLmRhdGFUcmFuc2Zlci5maWxlcywgZmlsZSA9PiAoewogICAgICAgICAgbmFtZTogZmlsZS5uYW1lLAogICAgICAgICAgc2l6ZTogZmlsZS5zaXplLAogICAgICAgICAgdHlwZTogZmlsZS50eXBlLAogICAgICAgICAgYWN0dWFsOiBmaWxlLAogICAgICAgICAgaW52YWxpZE1lc3NhZ2U6IHRoaXMudmFsaWRhdGUoZmlsZSkKICAgICAgICB9KSkKICAgICAgXQogICAgICB0aGlzLnNlbmRGaWxlcyh0aGlzLmZpbGVzVG9VcGxvYWQpOwoKICAgIH0uYmluZCh0aGlzKSk7CiAgICAKICB9Cn0K"},{"version":3,"sources":["UploadBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA","file":"UploadBox.vue","sourceRoot":"src/components/general","sourcesContent":["<template>\n  <div :class=\"{\n    'UploadBox':true\n    }\">\n    <div class=\"UploadBox_Container\">\n\n      <form @submit.prevent=\"sendFile\" enctype=\"multipart/form-data\">\n        <div class=\"UploadBox_Header\">Upload</div>\n        \n        <!-- File drop area -->\n        <div ref=\"DropArea\" class=\"UploadBox_DropArea\">\n          <label for=\"UploadBox_FileSelect\" class=\"UploadBox_DropArea_Button\" data-button=\"\" data-button-color=\"blue\">Select or drag files here</label>\n          <input id=\"UploadBox_FileSelect\" class=\"Style_HidePermanent\" type=\"file\" ref=\"files\" multiple @change=\"onSelect\"/>\n          <div class=\"UploadBox_Message\">{{message}}</div>\n        </div>\n      </form>\n\n      <!-- Uploaded items -->\n      <AudioBox v-for=\"(item,index) in uploadedFiles\" :key=\"index\" :item=\"item\" :mode=\"'edit'\" :appData=\"appData\" @deleteSound=\"deleteSound\"/>\n \n      <!-- Form controls -->\n      <div class=\"UploadBox_Controls\" v-if=\"uploadedFiles.length > 0\">\n          <button id=\"UploadBox_Clear\" data-button=\"\">Clear</button>\n          <button id=\"UploadBox_Save\" data-button=\"\" data-button-color=\"blue\" @click=\"postSounds()\">Save</button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport AudioBox from \"../audio/AudioBox.vue\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default {\n  name: \"UploadBox\",\n  props: ['appData'],\n  components: {\n    AudioBox\n  },\n  data() {\n    return {\n      status: 'initial',\n      message: \"\",\n      filesToUpload: [],\n      uploadedFiles: []\n    }\n  },\n  methods: {\n    validate(file) {\n      const MAX_SIZE = 1000000;\n      const allowedTypes = ['audio/mpeg','audio/mp4','audio/ogg','audio/vnd.wav','audio/vorbis'];\n      \n      if (file.size < MAX_SIZE) {\n        return `This file is too large. Max size is ${MAX_SIZE/1000}Kb`;\n      }\n\n      if (!allowedTypes.includes(file.type)) {\n        return \"This file is not an audio file\";\n      }\n      \n      return \"\";\n    },\n    async sendFiles() {\n      const formData = new FormData();\n      formData.append('userId', this.$store.state.currentUser._id);\n      _.forEach(this.filesToUpload, (file) => {\n        if (this.validate(file) === \"\") {\n          formData.append('files', file.actual);\n        } else {\n          file.status = 'Not sent';\n        }\n      });\n      if (this.filesToUpload.length > 0) {\n        axios.post('/uploadAudio', formData)\n        .then(response => {\n          // Process files\n          const uploadedFiles = response.data.uploadedFiles;\n          _.forEach(uploadedFiles, (file) => {\n\n            // Defaults\n            file.editable = {\n              title: file.originalname,\n              author: 'Username', // Add username automatically, entered name if guest\n              description: 'Enter a description here.',\n              tags: [],\n              marketplace: {\n                mode: 'none'\n              },\n              effects: ['bass'],\n              preview: {\n                \"start\": 0,\n                \"duration\": file.duration\n              }\n            };\n          });\n          \n          // Set uploaded files\n          this.uploadedFiles = [...this.uploadedFiles,...uploadedFiles];\n\n          // Reset file selector\n          this.files = [];\n          this.filesToUpload = [];\n        })\n        .catch(err => {\n          console.log(err);\n        });\n      } else {\n        console.log('Display: No valid audio files were selected');\n      }\n    },\n    onSelect() {\n      const files = this.$refs.files.files;\n      this.filesToUpload = [\n        ...this.filesToUpload,\n        ..._.map(files, file => ({\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          actual: file,\n          invalidMessage: this.validate(file)\n        }))\n      ]\n      this.sendFiles(this.filesToUpload);\n    },\n    async postSounds(){\n      const formData = new FormData();\n      _.forEach(this.uploadedFiles, (item) => {\n          formData.append('soundsToUpdate[]', JSON.stringify(item));\n      });\n      axios.post('/updateSound', formData)\n        .then(response => {\n          console.log(response);\n          this.uploadedFiles = [];\n        })\n        .catch(err => {\n          console.log(err);\n        });      \n    },\n    deleteSound(_id) {\n      const sound = this.uploadedFiles.filter(file => {\n        return file._id = _id\n      })[0];\n      const index = this.uploadedFiles.indexOf(sound);\n      if (index > -1) {\n        this.uploadedFiles.splice(index,  1);\n      }\n    }\n  },\n  mounted() {\n\n    /* DROP AREA - Accept files\n    /*\n      Listen to all of the drag events and bind an event listener to each\n      for the fileform.\n    */\n    ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'].forEach( function( evt ) {\n      /*\n        For each event add an event listener that prevents the default action\n        (opening the file in the browser) and stop the propagation of the event (so\n        no other elements open the file in the browser)\n      */\n      this.$refs.DropArea.addEventListener(evt, function(e){\n        e.preventDefault();\n        e.stopPropagation();\n      }.bind(this), false);\n    }.bind(this));\n\n    /*\n      Add an event listener for drop to the form\n    */\n    this.$refs.DropArea.addEventListener('drop', function(e){\n      /*\n        Capture the files from the drop event and add them to our local files\n        array.\n      */ \n\n      this.filesToUpload = [\n        ...this.filesToUpload,\n        ..._.map(e.dataTransfer.files, file => ({\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          actual: file,\n          invalidMessage: this.validate(file)\n        }))\n      ]\n      this.sendFiles(this.filesToUpload);\n\n    }.bind(this));\n    \n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n  .UploadBox_Header {\n    margin-bottom: 10px;\n    font-size: 20px;\n    font-weight: 600;\n    text-transform: uppercase;\n    text-align: left;\n  }\n  .UploadBox,\n  .UploadBox_Container {\n    box-sizing: border-box;\n    overflow: hidden;\n    padding: 10px;\n    border-radius: 10px;\n  }\n  .UploadBox {\n    margin-bottom: 20px; \n    margin: 0 auto;\n    margin-bottom: 20px;\n    background: #e2ebf0;\n  }\n  .UploadBox_DropArea {\n    position: relative;\n    height: 150px;\n    width:100%;\n    background: transparent;\n    border-radius: 10px;\n    margin-bottom: 10px;\n    background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' opacity='0.2' height='100%25' fill='none' stroke='%23333' stroke-width='2' stroke-dasharray='25%2c 14' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e\");\n  }\n  .UploadBox_DropArea_Button {\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    display: inline-block;\n  }\n  .AudioBox {\n    margin-bottom: 20px;\n  }\n</style>"]}]}